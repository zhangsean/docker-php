#!/bin/sh
set -e
set -o pipefail

[ -z "$K8S_URL" ] && echo "Need to set env K8S_URL" && exit 1
kubectl config set-cluster default --server="$K8S_URL"

if [ -n "$K8S_CA" ]; then
    echo "$K8S_CA" | base64 -d > ~/.kube/ca.crt
    kubectl config set-cluster default --certificate-authority=/root/.kube/ca.crt
else
    kubectl config set-cluster default --insecure-skip-tls-verify=true
fi

if [ -n "$K8S_TOKEN" ]; then
    kubectl config set-credentials admin --token="$K8S_TOKEN"
elif [ -n "$K8S_CER" -a -n "$K8S_KEY" ]; then
    echo "$K8S_CER" | base64 -d > ~/.kube/admin.crt
    echo "$K8S_KEY" | base64 -d > ~/.kube/admin.key
    kubectl config set-credentials admin --client-key=/root/.kube/admin.key --client-certificate=/root/.kube/admin.crt
else
    echo "Need to set env K8S_TOKEN or K8S_CER & K8S_KEY"
    exit 1
fi

kubectl config set-context default --cluster=default --user=admin
kubectl config use-context default
kubectl cluster-info
